package kafka

import (
	"context"
	"encoding/json"
	"github.com/Extrig/order-service/internal/db"
	models "github.com/Extrig/order-service/internal/model"
	"github.com/rs/zerolog/log"
	"github.com/segmentio/kafka-go"
	"os"
	"time"
)

func StartConsumer() {
	broker := os.Getenv("KAFKA_ADDR")
	if broker == "" {
		broker = "kafka:9092"
	}
	topic := "orders"
	groupID := "order-consumer-group"

	r := kafka.NewReader(kafka.ReaderConfig{
		Brokers:     []string{broker},
		GroupID:     groupID,
		Topic:       topic,
		StartOffset: kafka.FirstOffset,
		MinBytes:    1e3,  // 1KB
		MaxBytes:    10e6, // 10MB
		MaxWait:     1 * time.Second,
	})
	log.Info().Msg("üì• –ö–æ–Ω—Å—å—é–º–µ—Ä Kafka –∑–∞–ø—É—â–µ–Ω, –æ–∂–∏–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è...")

	for {
		m, err := r.ReadMessage(context.Background())
		if err != nil {
			log.Error().Err(err).Msg("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ Kafka")
			continue
		}
		log.Info().Str("key", string(m.Key)).Msg("üîî –ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")

		var order models.Order
		if err := json.Unmarshal(m.Value, &order); err != nil {
			log.Error().Err(err).Msg("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑–±–æ—Ä–µ JSON –∑–∞–∫–∞–∑–∞")
			continue
		}

		err = db.SaveOrder(order)
		if err != nil {
			log.Error().Err(err).Msg("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ –≤ –ë–î")
			continue
		}

		log.Info().Str("order_uid", order.OrderUID).Msg("‚úÖ –ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω")
	}
}
