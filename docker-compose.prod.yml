
services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: order-backend
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - kafka
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/logs:/app/logs
      - ./frontend:/frontend
    networks:
      - backend-net

  postgres:
    image: postgres:15
    container_name: order-postgres
    environment:
      POSTGRES_DB: order_service
      POSTGRES_USER: order_user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend-net

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: order-zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    networks:
      - backend-net

  kafka:
    image: bitnami/kafka:3.6
    container_name: order-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_BROKER_ID: 1
      KAFKA_CREATE_TOPICS: "orders:1:1"
    depends_on:
      - zookeeper
    networks:
      - backend-net
